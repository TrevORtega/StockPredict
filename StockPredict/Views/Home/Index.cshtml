@{
    ViewBag.Title = "Stock Price Predictor";
}

<div class="wrapper">
    <div class="nonGraph">
        <h1>Dow Jones Industrial Average Market Predictor</h1>
        <h3>
            Enter a date to predict the state of the market!
        </h3>
        <!--<form method="POST" asp-action="Index" asp-controller="Form">
        <input type="date" asp-for="date" class="date"/>
        <input type="submit" name="enter" value="Enter" class="submit" />
    </form>-->
        @model StockPredict.Models.FormModel
        @using (Html.BeginForm())
        {
            <input type="date" name="formName" class="date" />
            <input type="submit" name="enter" value="Enter" class="submit" />
        }
        @if (IsPost)
        {
            <div class="results">
                <p>The price of the DJIA on @Html.DisplayFor(m => m.Date) is $<b id="resultPrice">@Html.DisplayFor(m => m.Price)</b></p>
                @if (Model.MarketState)
                {
                    <p>The market is predicted to be increasing; buying at this time may result in short term profits.</p>
                }
                else
                {
                    <p>The market is predicted to be decreasing; shorting the DJIA at this time may result in short term profits. </p>
                }
            </div>
        }
    </div>

    <div id="bigOlGraph"></div>
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <script>
        window.onload = function () {
		var chart = new CanvasJS.Chart("bigOlGraph", {
			theme: "light2",
			animationEnabled: true,
			title: {
				text: "Dow Jones Price vs Months Since 1915"
			},
			subtitles: [
				{ text: "" }
			],
			data: [
            {
                name: "Dow Jones Historical Data",
				type: "line", //change type to bar, line, area, pie, etc
				showInLegend: true,
                dataPoints: @Html.Raw(ViewBag.dataPoints),

            },
                {
                    name: "Predicted Data",
                    type: "line",
                    showInLegend: true,
                    dataPoints: @Html.Raw(ViewBag.predictedPoints),
                },

                {
                    name: "Prediction",
                    type: "scatter",
                    showInLegend: true,
                    dataPoints: @Html.Raw(ViewBag.Prediction),
                },

			]
		});

        chart.render();
	};
    </script>
    <script>
        document.getElementById("resultPrice").innerHTML = numberWithCommas(@Html.DisplayFor(m => m.Price));
        function numberWithCommas(x) {
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }
    </script>

</div>
